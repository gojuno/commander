apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def gitTag() {
    def tag = 'git tag --list --points-at HEAD'.execute((List) null, rootProject.projectDir).text.trim()

    if (tag.split(System.lineSeparator()).length > 1) {
        throw new IllegalStateException("gitTag is accessed but commit has multiple tags: $tag")
    }

    return tag
}

def projectVersion(tag) {
    if (tag.startsWith('v')) {
        return tag.substring(1)
    } else if (tag.isEmpty()) {
        return "development"
    }

    return tag
}

def validateTagAndVersion() {
    def gitTag = gitTag()
    def tagVersion = projectVersion(gitTag)

    if (gitTag.isEmpty()) {
        throw new IllegalStateException('Publishing is not allowed because current commit has no tag')
    }

    if (tagVersion.isEmpty()) {
        throw new IllegalStateException('Publishing is not allowed because current projectVersion is empty')
    }

    if (tagVersion != project.version) {
        throw new IllegalStateException('Publishing not allowed because current tag version does not match version declared in gradle.properties')
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task validatePublishing {
    doLast {
        validateTagAndVersion()
    }
}

bintrayUpload.dependsOn validatePublishing

publishing {
    publications {
        CommanderPublication(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                url = 'https://github.com/gojuno/commander'
                description = project.description
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'gojuno'
                        name = 'Juno Inc.'
                        email = 'opensource@gojuno.com'
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publish = true

    pkg {
        repo = 'maven'
        name = 'commander'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/gojuno/commander.git'
        issueTrackerUrl = 'https://github.com/gojuno/commander/issues'
        publications = ['CommanderPublication']

        version {
            name = project.version
            vcsTag = gitTag()

            gpg {
                sign = true
                passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE')
            }
        }
    }
}
